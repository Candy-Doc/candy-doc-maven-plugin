stages:
  - test
  - build
  - release

image: maven:3-jdk-11-slim

variables:
  MAVEN_CLI_OPTS: "-s ci_settings.xml -B -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository"

cache:
  paths:
    - .m2/repository

test:
  stage: test
  script:
    - mvn $MAVEN_CLI_OPTS test
  artifacts:
    expire_in: 1 hour
    paths:
      - target/*
  except:
    - master

build:
  stage: build
  script:
    - mvn $MAVEN_CLI_OPTS -DskipTests package
  dependencies:
    - test
  except:
    - master


release:
  stage: release
  before_script:
    - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )'
    - apt-get install git -y
    - eval $(ssh-agent -s)
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "$CI_TOKEN_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - echo "$CI_TOKEN_PRIVATE_KEY" > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - '[[ -f /.dockerenv ]] && echo -e "Host gitlab.ippon.fr:ippon-lille\n\tStrictHostKeyChecking no\n\tUser git\n\tIdentityFile ~/.ssh/id_rsa\n\n" > ~/.ssh/config'
    - git config --global user.email "${GITLAB_USER_EMAIL}"
    - git config --global user.name "${GITLAB_USER_NAME}"
    - echo $(CI_REPOSITORY_URL] | perl-pe’s#.*@(.+?(\:\d+)?)/#git@\i:m°
    - CI_REPOSITORY_SSH_URL=`echo ${CI_REPOSITORY_URL} | perl -pe 's#.*@(.+?(\:\d+)?)/#git@\1:#'`
    - git remote set-url --push origin ${CI_REPOSITORY_SSH_URL}
  script:
    - git checkout -B ${CI_COMMIT_REF_NAME}
    - mvn $MAVEN_CLI_OPTS release:clean -DskipTests=true
    - mvn $MAVEN_CLI_OPTS release:prepare -DskipTests=true
    - git push origin --tags
    - mvn $MAVEN_CLI_OPTS release:perform -DskipTests=true
  only:
    - master
  except:
    variables:
      - $CI_COMMIT_MESSAGE =~ /maven-release-plugin/